#summary A JVM/.NET language

= Introduction =

Someone really needs to invent a practical (and therefore pure, lazy) language for the JVM et. al.


= Details =

Haskell-like syntax
  * In do-notation and bindings, swap <- for = and swap = for {} except with a source file level pragma
  * Target .NET and supply supporting DLL (and JAR)
  * Have String literals backed by a finger-tree
  * Applicative comprehensions e.g. [[exp1 exp2 exp3]]
  * Comonad comprehensions
  * Parallel libraries
  * Strictness annotations available in many places e.g. function arguments, data type constructor arguments
  * FFI inside a ST-like monad distinguishing between .NET and Java. With unsafe available.
  * Provide accessible libraries to compiler tools so that decent build scripts can be written.
  * (?)Translate Haskell syntax for target compilation