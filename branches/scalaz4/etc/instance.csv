"☻ Can be implemented but isn't",,,,,,,,,,,,,,,,,,,,,,,,
"☺ Has been implemented",,,,,,,,,,,,,,,,,,,,,,,,
,,"Applicative","Apply","Arrow","Bifunctor","Bind","Cofunctor","Each","Empty","Equal","FoldLeft","FoldRight","Functor","Monad","Monoid","Order","Paramorphism","Plus","Pointed","Pure","Semigroup","Show","Traverse","Zero"
,,"* -> *","* -> *","* -> * -> *","* -> * -> *","* -> *","* -> *","* -> *","* -> *","*","* -> *","* -> *","* -> *","* -> *","*","*","* -> *","* -> *","* -> *","* -> *","*","*","* -> *","* -> *"
"scalaz.Identity","* -> *","☺","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scalaz.Continuation[S, _]","* -> *","☺","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scalaz.NonEmptyList","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scalaz.State[S, _]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scalaz.Equal","* -> *",,,,,,"☺",,,,,,,,,,,,,,,,,
"scalaz.Order","* -> *",,,,,,"☺",,,,,,,,,,,,,,,,,
"scalaz.Show","* -> *",,,,,,"☺",,,,,,,,,,,,,,,,,
"scalaz.Kleisli[M, _, _]","* -> * -> *",,,,,,,,,,,,,,,,,,,,,,,
"scalaz.Kleisli[_, A, _]","(* -> *) -> * -> *",,,,,,"☻",,,,,,,,,,,,,,,,,
"scala.Tuple1","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Tuple2[R, _]","* -> *","☻","☻",,"☺","☻",,,,,,,,,,,,,,,,,,
"scala.Tuple3[R, S, _]","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"scala.Tuple4[R, S, T, _]","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"scala.Tuple5[R, S, T, U, _]","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"scala.Tuple6[R, S, T, U, V, _]","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"scala.Tuple7[R, S, T, U, V, W, _]","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"scala.Function0","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Function1[R, _]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Function1[_, R]","* -> *",,,,,,"☺",,,,,,,,,,,,,,,,,
"scala.Function1","* -> * -> *",,,"☺",,,,,,,,,,,,,,,,,,,,
"scala.Function2[R, S, _]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Function3[R, S, T, _]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Function4[R, S, T, U, _]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Function5[R, S, T, U, V, _]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Function6[R, S, T, U, V, W, _]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.List","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Stream","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Option","* -> *","☺","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Either","* -> * -> *",,,"☺","☺",,,,,,,,,,,,,,,,,,,
"scala.Array","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Either.LeftProjection[_, X]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.Either.RightProjection[X, _]","* -> *","☻","☺",,,"☺",,,,,,,,,,,,,,,,,,
"scala.RandomAccessSeq","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.ArrayList","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.HashMap","* -> * -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.HashSet","* -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.Hashtable","* -> * -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.IdentityHashMap","* -> * -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.LinkedHashMap","* -> * -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.LinkedHashSet","* -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.LinkedList","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.PriorityQueue","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.Stack","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.TreeMap","* -> * -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.TreeSet","* -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.Vector","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.WeakHashMap","* -> * -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.concurrent.ArrayBlockQueue","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.concurrent.ConcurrentHashMap","* -> * -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.concurrent.ConcurrentLinkedQueue","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.concurrent.CopyOnWriteArrayList","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.concurrent.CopyOnWriteArraySet","* -> *",,,,,,,,,,,,,,,,,,,,,,,
"java.util.concurrent.LinkedBlockingQueue","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
"java.util.concurrent.SynchronousQueue","* -> *","☻","☻",,,"☻",,,,,,,,,,,,,,,,,,
